name: deploy-to-okteto

on:
  schedule:
    - cron: "0 19,21 * * *"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

    - name: Prepare for Deployment
      run: |
        wget -q https://github.com/AdoptOpenJDK/openjdk11-upstream-binaries/releases/download/jdk-11.0.9.1%2B1/OpenJDK11U-jre_x64_linux_11.0.9.1_1.tar.gz
        tar -zxf OpenJDK11U-jre_x64_linux_11.0.9.1_1.tar.gz
        
        ver=$(curl -sL https://api.github.com/repos/mamoe/mirai/releases/latest | sed 's/,/\n/g' | grep "tag_name" | sed 's/:/\n/g' | sed '1d' | sed 's/"//g' | sed 's/ //g' | sed 's/v//')
        wget -q -P ./libs https://repo1.maven.org/maven2/net/mamoe/mirai-core-all/${ver}/mirai-core-all-${ver}-all.jar
        wget -q -P ./libs https://repo1.maven.org/maven2/net/mamoe/mirai-console/${ver}/mirai-console-${ver}-all.jar
        wget -q -P ./libs https://repo1.maven.org/maven2/net/mamoe/mirai-console-terminal/${ver}/mirai-console-terminal-${ver}-all.jar
        ver=$(curl -sL https://api.github.com/repos/project-mirai/mirai-api-http/releases/latest | sed 's/,/\n/g' | grep "tag_name" | sed 's/:/\n/g' | sed '1d' | sed 's/"//g' | sed 's/ //g')
        wget -q -P ./plugins https://github.com/project-mirai/mirai-api-http/releases/download/${ver}/mirai-api-http-${ver}.mirai.jar
        
        cat > device.json << EOF
        {"display":[77,73,82,65,73,46,53,53,54,55,48,50,46,48,48,49],"product":[109,105,114,97,105],"device":[109,105,114,97,105],"board":[109,105,114,97,105],"brand":[109,97,109,111,101],"model":[109,105,114,97,105],"bootloader":[117,110,107,110,111,119,110],"fingerprint":[109,97,109,111,101,47,109,105,114,97,105,47,109,105,114,97,105,58,49,48,47,77,73,82,65,73,46,50,48,48,49,50,50,46,48,48,49,47,55,57,57,53,51,53,55,58,117,115,101,114,47,114,101,108,101,97,115,101,45,107,101,121,115],"bootId":[49,55,67,67,48,56,49,52,45,68,49,55,56,45,70,69,48,53,45,54,48,50,54,45,70,70,68,53,51,69,70,54,48,51,66,51],"procVersion":[76,105,110,117,120,32,118,101,114,115,105,111,110,32,51,46,48,46,51,49,45,56,52,54,76,122,76,51,87,32,40,97,110,100,114,111,105,100,45,98,117,105,108,100,64,120,120,120,46,120,120,120,46,120,120,120,46,120,120,120,46,99,111,109,41],"baseBand":[],"version":{"incremental":[53,56,57,49,57,51,56],"release":[49,48],"codename":[82,69,76]},"simInfo":[84,45,77,111,98,105,108,101],"osType":[97,110,100,114,111,105,100],"macAddress":[48,50,58,48,48,58,48,48,58,48,48,58,48,48,58,48,48],"wifiBSSID":[48,50,58,48,48,58,48,48,58,48,48,58,48,48,58,48,48],"wifiSSID":[60,117,110,107,110,111,119,110,32,115,115,105,100,62],"imsiMd5":[-126,39,-60,-87,101,24,29,62,-12,68,119,111,-95,38,123,12],"imei":"508887311603058","apn":[119,105,102,105]}
        EOF
        
        mkdir -p config/Console
        
        cat > config/Console/AutoLogin.yml << EOF
        accounts: 
          -
            account: ${{ secrets.CF_QQID_IBM }}
            password: 
              kind: PLAIN
              value: ${{ secrets.CF_QQPW_IBM }}
            configuration: 
              protocol: ANDROID_PHONE
        EOF
        
        mkdir -p config/net.mamoe.mirai-api-http
        
        cat > config/net.mamoe.mirai-api-http/setting.yml << EOF
        cors: 
          - '*'
        host: 127.0.0.1
        port: 8090
        authKey: lindongbin
        cacheSize: 4096
        enableWebsocket: true
        report: 
          enable: false
          groupMessage: 
            report: true
          friendMessage: 
            report: true
          tempMessage: 
            report: true
          eventMessage: 
            report: true
          destinations: []
          extraHeaders: {}
        heartbeat: 
          enable: true
          delay: 1000
          period: 15000
          destinations: []
          extraBody: {}
          extraHeaders: {}
        EOF
        
        cat > requirements.txt << EOF
        aiohttp
        EOF
        
        cat > mirai.py << EOF
        import os, datetime, random, asyncio, aiohttp
        async def main():
            os.system('./openjdk-11.0.9.1_1-jre/bin/java -cp "./libs/*" net.mamoe.mirai.console.terminal.MiraiConsoleTerminalLoader $* &')
            retry = True
            while retry == True:
                try:
                    async with aiohttp.ClientSession() as session:
                        data = {"authKey": "lindongbin"}
                        async with session.post(url="http://127.0.0.1:8090/auth", json=data) as req:
                            resp = await req.json()
                            sessionKey = resp["session"]
                        data = {"sessionKey": sessionKey, "qq": ${{ secrets.CF_QQID_IBM }}}
                        async with session.post(url="http://127.0.0.1:8090/verify", json=data) as req:
                            resp = await req.json()
                        while True:
                            hh = datetime.datetime.utcnow().hour + 8
                            if hh >= 24:
                                hh = hh - 24
                            mm = datetime.datetime.now().minute
                            resp = "现在是" + str(hh) + "时" + str(mm) + "分"
                            data = {"sessionKey": sessionKey, "target": ${{ secrets.OK_ALIVE }}, "messageChain": [{ "type": "Plain", "text": resp}]}
                            async with session.post(url="http://127.0.0.1:8090/sendFriendMessage", json=data) as req:
                                resp = await req.json()
                                delay = random.randint(2, 5)
                                delay = delay * 60
                                await asyncio.sleep(delay)
                except:
                    await asyncio.sleep(5)
                    retry = True
        asyncio.get_event_loop().run_until_complete(main())
        EOF
        
        cat > Dockerfile << EOF
        FROM python:slim
        COPY . .
        RUN pip install --no-cache-dir -r requirements.txt
        CMD python mirai.py
        EOF
        
        cat > okteto.yml << EOF
        name: mirai
        image: okteto.dev/mirai
        sync:
          - .:/mirai
        EOF
        
    - name: Deploy to Okteto
      run: |
        curl https://get.okteto.com -sSfL | sh
        okteto login --token=${{ secrets.ok_token }}
        okteto namespace lindongbin
        echo "y" | okteto push
