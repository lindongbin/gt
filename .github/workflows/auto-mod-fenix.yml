name: auto-mod-fenix

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Download and mod fenix
      run: |
        cat > mobile.sh << EOF
        wget -q https://github.com/iBotPeaches/Apktool/releases/download/v2.5.0/apktool_2.5.0.jar
        
        wget -q -O "resp64m" url64m
        
        java -jar apktool_2.5.0.jar d resp64m -o v8a

        sed -i "s/^.*versionCode.*$/  versionCode: '2147483647'/" v8a/apktool.yml
        sed -i 's/baidu/unknown/g' v8a/assets/extensions/webcompat/data/ua_overrides.js
        sed -i 's/browser.safebrowsing.malware.enabled/unknown/;s/browser.safebrowsing.phishing.enabled/unknown/' v8a/smali_classes2/org/mozilla/geckoview/ContentBlocking\\\$Settings.smali
        sed -i '/public aboutConfigEnabled/{n;s/\.locals 1/\.locals 1\n    const\/4 p1, 0x1/}' v8a/smali_classes2/org/mozilla/geckoview/GeckoRuntimeSettings\\\$Builder.smali
        sed -i 's/"geckoViewAddons"/"unknown"/;s/"nativeMessaging"/"unknown"/;/invoke-virtual {p0, p1, p2, p3}/i\    const\/4 p2, 0x1' v8a/smali/mozilla/components/feature/addons/AddonManager.smali
        sed -i 's/"content"/"unknown"/;s/"file"/"unknown"/;s/"resource"/"unknown"/' v8a/smali/mozilla/components/browser/engine/gecko/GeckoEngineSession.smali
        sed -i '/3ee/i\
            new-instance v11, Ljava\/lang\/StringBuilder;\
            invoke-direct {v11}, Ljava\/lang\/StringBuilder;-><init>()V\
            const-string v12, "https:\/\/cdn.jsdelivr.net\/gh\/lindongbin\/gt@fenix\/addons\.json?t="\
            invoke-virtual {v11, v12}, Ljava\/lang\/StringBuilder;->append(Ljava\/lang\/String;)Ljava\/lang\/StringBuilder;\
            new-instance v12, Ljava\/util\/Date;\
            invoke-direct {v12}, Ljava\/util\/Date;-><init>()V\
            invoke-virtual {v12}, Ljava\/util\/Date;->getTime()J\
            move-result-wide v12\
            invoke-static {v12, v13}, Ljava\/lang\/String;->valueOf(J)Ljava\/lang\/String;\
            move-result-object v12\
            invoke-virtual {v11, v12}, Ljava\/lang\/StringBuilder;->append(Ljava\/lang\/String;)Ljava\/lang\/StringBuilder;\
            invoke-virtual {v11}, Ljava\/lang\/StringBuilder;->toString()Ljava\/lang\/String;\
            move-result-object v5\
            const\/4 v11, 0x0\
            const\/4 v12, 0x0\
            const\/4 v13, 0x0' v8a/smali/mozilla/components/feature/addons/amo/AddonCollectionProvider.smali
        
        java -jar apktool_2.5.0.jar b v8a -o v8a.apk --use-aapt2
        
        wget -q https://github.com/lindongbin/gt/raw/master/zipalign
        wget -q -P ./lib64 https://github.com/lindongbin/gt/raw/master/libc%2B%2B.so
        chmod +x zipalign
        ./zipalign -p 4 v8a.apk v8a-align.apk
        
        wget -q https://github.com/lindongbin/gt/raw/master/apksigner.jar
        wget -q https://github.com/lindongbin/gt/raw/master/apksigner.jks
        java -jar apksigner.jar sign --ks apksigner.jks --ks-pass pass:testkey --out resp64mm v8a-align.apk
        EOF

        chmod +x ./mobile.sh

    - name: Install dependencies
      run: |
        pip install aiohttp
        
    - name: Create python file
      run: |
        cat > fenix.py << EOF
        import asyncio, aiohttp, json, re, os
        async def upload(filename):
            cookies = {'ylogin': '${{ secrets.lzy_ylogin }}', 'phpdisk_info': '${{ secrets.lzy_phpdisk_info }}'}
            headers = {'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0'}
            url = "https://pc.woozooo.com/fileup.php"
            fields={"task": "1", "folder_id": "${{ secrets.lzy_folder_id }}", "id": "WU_FILE_0", "name": filename, "type": "application/octet-stream"}
            with aiohttp.MultipartWriter("form-data") as mpwriter:
                part = mpwriter.append(open(filename, 'rb'))
                part.set_content_disposition('form-data', name="upload_file", filename=filename)
                for key, value in fields.items():
                  part = mpwriter.append(value)
                  part.set_content_disposition('form-data', name=key)
                headers["Content-Type"] = mpwriter.content_type
            async with aiohttp.ClientSession() as session:
                async with session.post(url=url, headers=headers, data=mpwriter, cookies=cookies, timeout=0) as req:
                    resp = await req.read()
                    resp = json.loads(resp)["info"]
                    print(filename + resp)
        async def main():
            cookies = {'ylogin': '${{ secrets.lzy_ylogin }}', 'phpdisk_info': '${{ secrets.lzy_phpdisk_info }}'}
            headers = {'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0'}
            url = "https://pc.woozooo.com/doupload.php"
            data = {'task': 5, 'folder_id': ${{ secrets.lzy_folder_id }}, 'pg': 1}
            async with aiohttp.ClientSession() as session:
                async with session.post(url=url, data=data, headers=headers, cookies=cookies) as req:
                    files = await req.text()
                url = "https://api.github.com/repos/mozilla-mobile/fenix/releases/latest"
                async with session.get(url=url) as req:
                    resp = await req.read()
                resp = json.loads(resp)["tag_name"].replace("v", "")
                url64m = "https://github.com/mozilla-mobile/fenix/releases/download/v" + resp + "/fenix-" + resp + "-arm64-v8a.apk"
                resp64m = "fenix-" + resp + "-arm64-v8a.apk"
                resp64mm = "fenix-" + resp + "-arm64-v8a-mod.apk"
                if files.find(resp64mm) == -1:
                    with open('mobile.sh','+r') as f:
                        t = f.read()
                        t = t.replace('url64m', url64m).replace('resp64mm', resp64mm).replace('resp64m', resp64m)
                        f.seek(0, 0)
                        f.write(t)
                    os.system("./mobile.sh")
                    await upload(resp64mm)
                else:
                    print(resp64mm + "已存在")
        asyncio.get_event_loop().run_until_complete(main())
        EOF
        
    - name: Run python file
      run: |
        python fenix.py
